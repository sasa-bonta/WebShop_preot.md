security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  encoders:
    App\Entity\User:
      algorithm: auto

  providers:
    main_user_provider:
      entity:
        class: App\Entity\User
        property: username
        # if you're using multiple entity managers
        # manager_name: customer

    api_user_provider:
      entity:
        class: App\Entity\User
        property: apiToken

    combined_user_provider:
      chain:
        providers:
          - api_user_provider
          - main_user_provider

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api:
      pattern: ^/api/v1
      guard:
        provider: combined_user_provider
        authenticators:
          - App\Security\TokenAuthenticator

    main:
      http-basic:
        provider: main_user_provider
      anonymous: lazy
      guard:
        provider: main_user_provider
        authenticators:
          - App\Security\LoginFormAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

  # activate different ways to authenticate
  # https://symfony.com/doc/current/security.html#firewalls-authentication

  # https://symfony.com/doc/current/security/impersonating_user.html
  # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/api/v1/products, roles: ROLE_USER, methods: [ GET ] }
    - { path: ^/api/v1/products, roles: ROLE_ADMIN }
    - { path: ^/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }